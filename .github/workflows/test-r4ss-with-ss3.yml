# run models without estimation, then run r4ss SS_plots and SS_output
name: test-r4ss-with-ss3

on:
  workflow_call:
    inputs:
      ss3-ref:
      default: 'main'
      required: true
      type: string

jobs:
  run-no-est:
    runs-on: ubuntu-latest
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"

    steps:

      - name: Checkout ss repo
        uses: actions/checkout@v2
        with:
          ref: inputs.ss3-ref

      - name: Checkout models repo
        uses: actions/checkout@v2
        with:
          repository: 'nmfs-stock-synthesis/ss-test-models'
          path: ss-test-models-repo

      - name: setup R
        uses: r-lib/actions/setup-r@master

      - name: install dependencies
        run: Rscript -e 'install.packages("remotes")'

      - name: install r4ss
        run: Rscript -e 'remotes::install_github("r4ss/r4ss")'

      - name: Get admb and put in path
        run: |
          wget https://github.com/admb-project/admb/releases/download/admb-12.3/admb-12.3-linux.zip
          sudo unzip admb-12.3-linux.zip -d /usr/local/bin
          sudo chmod 755 /usr/local/bin/admb-12.3/bin/admb
          echo "/usr/local/bin/admb-12.3/bin" >> $GITHUB_PATH

      - name: Build stock synthesis
        run: |
          rm -rf SS330
          mkdir SS330
          /bin/bash ./Make_SS_330_new.sh -b SS330

      - name: move exes, scripts to needed locations
        run: |
          mv ss-test-models-repo/models ss-test-models-repo/model_runs
          mv SS330/ss ss-test-models-repo/model_runs/ss
          mv ss-test-models-repo/jenkins/model_compare_noest/run_from_par.R ss-test-models-repo/run_from_par.R
          mv ss-test-models-repo/jenkins/model_compare_noest/run_compare_noest.R ss-test-models-repo/run_compare_noest.R

      - name: change permissions on ss exes
        run: chmod a+x ss-test-models-repo/model_runs/ss

      - name: run models without estimation
        run: |
         cd ss-test-models-repo && Rscript run_from_par.R

      - name: run SS output and SS plots
        run: |
          mod_names <- list.dirs("model_runs", full.names = FALSE, recursive = FALSE)
          print(mod_names)
          if(length(mod_names) == 0) {
            stop("Did not r4ss on any models; perhaps path to models is not correct?")
          }

          out <- lapply(mod_names, function(i) {
            tryCatch(r4ss::SS_output(file.path("run_R", "model_runs", i),
                                     verbose = FALSE, hidewarn = TRUE, printstats = FALSE),
                     error = function(e) {
                       print(e)
                     }
             )
           })

          plots <- lapply(out, function(x) {
            tryCatch(r4ss::SS_plots(x, verbose = FALSE),
          			   error = function(e) {
          			 print(e)
          			   })
            })

          # determine if job fails or not
          out_issues <- mod_names[unlist(lapply(out, function(x) "error" %in% class(x)))]
          plotting_issues<- mod_names[unlist(lapply(plots, function(x) "error" %in% class(x)))]

          if(length(out_issues) == 0 & length(plotting_issues) == 0) {
            message("all r4ss functions completed successfully")
          } else {
            message("There were some errors. SS_output failed to run for model_runs ",
                    paste0(out_issues, collapse = ", "), "; SS_plots failed to run for ",
                    "models ", paste0(plotting_issues, collapse = " ,"), ". More info ",
                    "below.")
            message("Problems with SS_output:")
            for(i in out_issues) {
              message(i)
              tmp_loc <- which(mod_names == i)
              print(out[[tmp_loc]])
            }
            for(p in plotting_issues) {
              message(p)
              tmp_loc <- which(mod_names == p)
              print(plots[[tmp_loc]])
            }
            q(status = 1)
          }
        shell: Rscript {0}


# could archive files, but the archive will be large, so may not be worth it.

