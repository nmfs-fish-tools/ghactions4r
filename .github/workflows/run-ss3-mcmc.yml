# Check mcmc wrosk
name: run-ss3-mcmc

on:
  workflow_call:

jobs:
  run-no-est:
    runs-on: ubuntu-latest
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"

    steps:

      - name: Checkout ss repo
        uses: actions/checkout@v2


      - name: Checkout models repo
        uses: actions/checkout@v2
        with:
          repository: 'nmfs-stock-synthesis/ss-test-models'
          path: ss-test-models-repo

      - name: setup R
        uses: r-lib/actions/setup-r@master

      - name: Get admb and put in path
        run: |
          wget https://github.com/admb-project/admb/releases/download/admb-12.3/admb-12.3-linux.zip
          sudo unzip admb-12.3-linux.zip -d /usr/local/bin
          sudo chmod 755 /usr/local/bin/admb-12.3/bin/admb
          echo "/usr/local/bin/admb-12.3/bin" >> $GITHUB_PATH

      - name: Build stock synthesis
        run: |
          rm -rf SS330
          mkdir SS330
          /bin/bash ./Make_SS_330_new.sh -b SS330

      - name: move exes, scripts to needed locations
        run: |
          mv ss-test-models-repo/models/Simple .
          mv SS330/ss ss

      - name: change permissions on ss exe
        run: chmod a+x ss

      - name: run models without estimation
        run: |
          # Run NUTS algorithim in ADMB to make sure still works with stock synthesis
          # run the simple model with -hbf option to get the necessary files
          system("./ss -hbf")
          # run the simple model 30 times using the NUTS algorithim
          niters <- 100
          for (i in 1:niters) {
            message("Running iteration ", i)
            # run simple model
            system("./ss  -maxfn 0 -phase 40 -nohess -mcmc 10 -nuts -mcseed 1 -max_treedepth 3")
            # read in adaption.csv
            adapt_df <- read.csv("adaptation.csv")
            if(i == 1) {
              compare_val <- adapt_df[nrow(adapt_df), "stepsize__"]
              message("Getting ref value from iteration ", i, ". Ref value is " ,
                      compare_val)
            } else {
              message("Checking iteration ", i)
              val_to_check <- adapt_df[nrow(adapt_df), "stepsize__"]
            	if(!identical(val_to_check, compare_val)) {
                stop("First step size for iteration ", i ," (step size =",
                     val_to_check,
                     ")", " was not equal to values in the first iteration (",
                     compare_val, ").")
            	}
            }
          }
          message("No differences in step size among stock synthesis runs.")
        shell: Rscript {0}


