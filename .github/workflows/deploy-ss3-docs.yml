name: Deploy documentation to the ss3 website

on:
  workflow_call:

jobs:
  build-html:
    runs-on: ubuntu-20.04
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
        
      - name: Set up R
        uses: r-lib/actions/setup-r@master
        with:
          r-version: 'release'
      - name: setup pandoc
        uses: r-lib/actions/setup-pandoc@master
        with:
            pandoc-version: '2.14.0.3'
            
      - name: Install rmarkdown
        run: install.packages("rmarkdown")
        shell: Rscript {0}
        
      - name: Convert tex to html for experimental version of manual
        run: pandoc SS330_User_Manual.tex -s -o SS330_User_Manual.html --toc --self-contained --mathjax --default-image-extension=png --number-sections --citeproc --variable linkcolor=#0033CC
        # Note: for the following R code, may be a single command to deal with the double header issue before rendering.
      - name: Edit html to improve formatting of experimental version of manual
        run: |
          html_txt <- readLines("SS330_User_Manual.html")
          html_txt <- gsub(
            "<p>_add:nnn<span>Catalog</span><span>Lang</span><span>(enUS)</span></p>",
            "", html_txt, fixed = TRUE)
          # remove Typical Value double header
          label <- grep(">Typical Value<", html_txt, fixed = TRUE)
          diff_label <- diff(label)
          to_rm <- which(diff_label <10)
          # one to get rid of is test
          to_rm_lines <- label[to_rm+1]
          for (i in to_rm_lines) {
            start <- grep("<tr", html_txt, fixed = TRUE)
            end <- grep("/tr", html_txt, fixed = TRUE)
            start <- max(start[start %in% (i-5):(i-1)])
            end <- min(end[end %in% (i+1):(i+5)])
            if(length(start) == 1 & length(end) == 1) {
             html_txt[start:end] <- ""
            }
          }
          # remove Value double header
          label <- grep(">Value<", html_txt, fixed = TRUE)
          diff_label <- diff(label)
          to_rm <- which(diff_label <10)
          to_rm_lines <- label[to_rm+1]
          for (i in to_rm_lines) {
            start <- grep("<tr", html_txt, fixed = TRUE)
            end <- grep("/tr", html_txt, fixed = TRUE)
            start <- max(start[start %in% (i-5):(i-1)])
            end <- min(end[end %in% (i+1):(i+5)])
            if(length(start) == 1 & length(end) == 1) {
              html_txt[start:end] <- ""
            }
          }
          # remove LO HI INIT etc double header
          label <- grep(">LO<", html_txt, fixed = TRUE)
          diff_label <- diff(label)
          to_rm <- which(diff_label < 20)
          to_rm_lines <- label[to_rm+1]
          for (i in to_rm_lines) {
            start <- grep("<tr", html_txt, fixed = TRUE)
            end <- grep("/tr", html_txt, fixed = TRUE)
            start <- max(start[start %in% (i-10):(i-1)])
            end <- min(end[end %in% (i+1):(i+10)])
            if(length(start) == 1 & length(end) == 1) {
              html_txt[start:end] <- ""
            }
          }
          # remove Pattern N Parameters etc double header
          label <- grep(">N Parameters<", html_txt, fixed = T)
          diff_label <- diff(label)
          to_rm <- which(diff_label == 5)
          to_rm_lines <- label[to_rm+1]
          for (i in to_rm_lines) {
            start <- grep("<tr", html_txt, fixed = TRUE)
            end <- grep("/tr", html_txt, fixed = TRUE)
            start <- max(start[start %in% (i-2):(i-1)])
            end <- min(end[end %in% (i+1):(i+2)])
            if(length(start) == 1 & length(end) == 1) {
              html_txt[start:end] <- ""
            }
          }
          # Add title to table of contents
          where_add <- grep('<nav id="TOC" role="doc-toc">', 
                            html_txt, fixed = TRUE)
          html_txt <- append(html_txt,
                             "<h1>Table of Contents</h1>",
                             after = where_add[1])
          # Add title to references
          where_add <- (grep("references csl-bib-body hanging-indent",
                             html_txt, fixed = TRUE) - 1)
          html_txt <- append(html_txt,
            '<h1 data-number="17" id="sec:references"><span class="header-section-number">17</span> References</h1>',
            after = where_add)
          # Add references to table of contents
          where_add <- grep("</nav>", html_txt, fixed = TRUE)-2
          html_txt <- append(html_txt,
            '<li><a href="#sec:references"><span class="toc-section-number">17</span> References</a></li>',
            after = where_add)
          # add formatting for tables
          where_add <- grep("td {", html_txt, fixed = TRUE)
          html_txt <- append(html_txt, "  vertical-align: top;", after = where_add)
          writeLines(html_txt, "SS330_User_Manual.html")
        shell: Rscript {0}
      
      - name: move html manual to the deployment folder
        run: |
          rm docs/SS330_User_Manual.html
          mv SS330_User_Manual.html docs/SS330_User_Manual.html
     
      - name: render the rmd files
        run: |
          rmarkdown::render("User_Guides/ss_model_tips/ss_model_tips.Rmd", output_format = "html_document", output_dir = "docs")
          rmarkdown::render("User_Guides/getting_started/Getting_Started_SS.Rmd", output_format = "html_document", output_dir = "docs")
        shell: Rscript {0}
       
      - name: Deploy to GitHub pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: docs/
